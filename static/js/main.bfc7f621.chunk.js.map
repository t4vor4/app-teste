{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["$","el","document","querySelector","App","props","onChange","event","valor","target","value","replace","console","log","length","y","toFixed","setState","state","infos","actualInfo","paginaAtual","currency","bind","barraNav","setPagina","cbAcumulado","useList","setNewUser","consultUser","cadastrarCompra","conversor","confirmaCadastro","storage","localStorage","myDearTest17112019","getItem","this","JSON","parse","axios","get","then","res","data","resp","setItem","stringify","users","nUser","email","senha","cpf","compras","indexOf","split","alert","i","push","validator","cUser","compra","$users","$user","codigo","cbPercent","cbValor","Math","floor","statusCadastro","info","totalArr","map","reduce","a","b","parseInt","toString","Fragment","className","data-page","onClick","_","string","name","listaCompras","teste","key","htmlFor","type","id","pattern","size","required","minLength","mask","maskChar","min","Component","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bfc7f621.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport InputMask from 'react-input-mask';\nimport axios from 'axios';\n\nconst $ = el => document.querySelector(el);\n\nconst url = `/objetoteste.json`;\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      infos: {},\n      actualInfo: {},\n      paginaAtual: 'inicio',\n      value: 'R$ 0,00'\n    }\n\n    this.currency = this.currency.bind(this);\n    this.barraNav = this.barraNav.bind(this);\n    this.setPagina = this.setPagina.bind(this);\n    this.cbAcumulado = this.cbAcumulado.bind(this);\n    this.useList = this.useList.bind(this);\n    this.setNewUser = this.setNewUser.bind(this);\n    this.consultUser = this.consultUser.bind(this);\n    this.cadastrarCompra = this.cadastrarCompra.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.conversor = this.conversor.bind(this);\n    this.confirmaCadastro = this.confirmaCadastro.bind(this);\n    \n\n  }\n\n  componentDidMount() {\n\n    const storage = !!localStorage.myDearTest17112019 && (localStorage.getItem('myDearTest17112019'))\n\n    console.log(this.state.actualInfo)\n\n    if (!!storage) {\n      this.setState({ infos: JSON.parse(storage) })\n      console.log(JSON.parse(storage))\n    }\n    else {\n      axios.get(url)\n        .then(res => res.data)\n        .then(resp => {\n          console.log(resp)\n          this.setState({ infos: resp })\n          localStorage.setItem('myDearTest17112019', JSON.stringify(this.state.infos))\n        })\n    }\n\n\n  }\n\n  conversor(el) {\n    localStorage.setItem('myDearTest17112019', JSON.stringify(el))\n  }\n\n  setNewUser() {\n    const users = this.state.infos;\n    const nUser = {}\n    nUser.email = $('#cadastro-email').value;\n    nUser.senha = $('#pass2').value;\n    nUser.cpf = $('#cpf').value;\n    nUser.compras = []\n\n    if (nUser.email.indexOf('@') === -1) {\n      alert('E-mail invalido')\n      return\n    } else {\n      const findDot = nUser.email.split('@')\n      if (findDot[1].indexOf('.') === -1) {\n        alert('E-mail invalido 2')\n        return\n      }\n    }\n\n    if (nUser.senha.length < 4) {\n      alert('Sua senha deve ter no mínimo 4 characteres')\n      return\n    }\n\n    if (nUser.cpf === '' || nUser.cpf.indexOf('_') > -1) {\n      alert('Por favor, preencha seu CPF corretamente')\n      return\n    }\n\n    for (let i = 0; i < users.length; i++) {\n      if (nUser.email === users[i].email) {\n        alert('E-mail já cadastrado.')\n        return\n      }\n      if (nUser.cpf === users[i].cpf) {\n        alert('CPF já cadastrado.')\n        return\n      }\n    }\n\n    users.push(nUser)\n\n    this.setState({\n      actualInfo: users,\n      paginaAtual: 'listagem'\n    })\n\n    this.conversor(users)\n\n  }\n\n  consultUser() {\n    const users = this.state.infos;\n    const cUser = {};\n    cUser.email = $('#login-email').value;\n    cUser.senha = $('#pass').value;\n    let validator;\n\n    console.log(users)\n\n    if (cUser.email.indexOf('@') === -1) {\n      alert('E-mail invalido')\n      return\n    } else {\n      const findDot = cUser.email.split('@')\n      if (findDot[1].indexOf('.') === -1) {\n        alert('E-mail invalido 2')\n        return\n      }\n    }\n    if (cUser.senha === '') {\n      alert('Senha inválida')\n      return\n    }\n\n    for (let i = 0; i < users.length; i++) {\n      if (cUser.email === users[i].email) {\n        if (cUser.senha === users[i].senha) {\n          validator = 1\n          this.setState({\n            actualInfo: users[i],\n            paginaAtual: 'listagem'\n          })\n        }\n      }\n    }\n\n    !validator && (alert('Usuário ou senha não encontrado.'))\n\n  }\n\n  cadastrarCompra() {\n    const compra = {}\n    const cbPercent = 0.05;\n    const $users = this.state.infos;\n    const $user = this.state.actualInfo\n\n    const valor = !!this.state.value ? this.state.value.replace('R$ ', '').replace(',', '') : null;\n    compra.codigo = $('#cadCode').value;\n    compra.data = ($('#cadData').value).replace(/-/g, '/');\n\n\n    if (!compra.codigo) { alert('Insira um código válido'); return }\n    if (!valor) { alert('Insira um valor de compra'); return }\n    if (!compra.data) { alert('Escolha uma data válida'); return }\n\n    if (!!$user.compras.length) {\n      for (let i = 0; i < $user.compras.length; i++) {\n        if ($user.compras[i].codigo === compra.codigo) { alert('Este código já existe'); return }\n      }\n    }\n\n    compra.valor = valor;\n    compra.cbPercent = cbPercent;\n    compra.cbValor = Math.floor(valor * cbPercent);\n    compra.statusCadastro = \"validacao\";\n\n    $user.compras.push(compra)\n\n    if (!!$users.length) {\n      for (let i = 0; i < $users.length; i++) {\n        if ($users[i].cpf === $user.cpf) $users[i] = $user\n      }\n    }\n\n    this.conversor($users)\n\n    alert('Compra cadastrada com sucesso!')\n\n    $('#cadValor').value = '';\n    $('#cadCode').value = '';\n    $('#cadData').value = '';\n\n  }\n\n  cbAcumulado() {\n\n    const info = this.state.actualInfo;\n\n    if (!!info.compras && !!info.compras.length) {\n\n      const somando = (a, b) => parseInt(a) + parseInt(b);\n\n      const limpaValores = el => el.statusCadastro !== 'reprovado' ? el.cbValor : 0\n\n      const total = info.compras.map(limpaValores).reduce(somando)\n\n      const totalArr = (((total*0.01).toFixed(2)).toString()).split('.')\n      \n      console.log(totalArr)\n      \n      if (!!totalArr) {\n        return (\n          <React.Fragment>\n            <h3 className=\"subtitle\">Valor total do Cashback acumulado até a presente data</h3>\n            <div className=\"text text--big\"><sup>R$</sup>{totalArr[0]}<small>,{totalArr[1]}</small></div>\n          </React.Fragment>\n        )\n      }\n      else {\n        return (\n          <h3 className=\"subtitle\">Não há valores disponíveis</h3>\n        )\n      }\n\n    }\n\n    else {\n      return (\n        <h3 className=\"subtitle\">Não há valores disponíveis</h3>\n      )\n    }\n\n  }\n\n  currency(valor) {\n    const newVal = 'R$ ' + (((valor * 0.01).toFixed(2)).replace('.', ','))\n    return newVal\n  }\n\n  setPagina(valor) {\n    this.setState({ paginaAtual: valor })\n  }\n\n  barraNav() {\n    return (\n      <div className={`nav ${this.state.paginaAtual}`}>\n        <button data-page=\"listagem\" onClick={_ => this.setState({ paginaAtual: 'listagem' })}>Lista de Compras</button>\n        <button data-page=\"cadastroCompras\" onClick={_ => this.setState({ paginaAtual: 'cadastroCompras' })}>Cadastro de Compras</button>\n        <button data-page=\"cshAcumulado\" onClick={_ => this.setState({ paginaAtual: 'cshAcumulado' })}>Cashback acumulado</button>\n      </div>\n    )\n  }\n\n  confirmaCadastro(string) {\n    if(string === 'validacao') {\n      return (\n        <select name=\"select\">\n          <option value=\"\" >Validação</option> \n          <option value=\"aprovado\" >Aprovado</option>\n          <option value=\"reprovado\">Reprovado</option>\n        </select>\n      )\n    }\n    if(string === 'aprovado') return 'Aprovado'\n    if(string === 'reprovado') return 'Reprovado'\n  }\n\n  useList() {\n    \n    const $users = this.state.infos;\n    const $user = this.state.actualInfo\n\n    // console.log(this.state.infos)\n\n    // console.log($user)\n\n    const listaCompras = !!$user.compras ? $user.compras : null\n\n    let teste = []\n\n    if (!!listaCompras && !!listaCompras.length) {\n      for (let i = 0; i < listaCompras.length; i++) {\n        const el = listaCompras[i];\n        const escolha = event => {\n          $user.compras[i].statusCadastro = event.target.value;\n\n          this.setState({actualInfo: $user})\n\n          for(let i in $users) {\n            if($users[i].cpf === $user.cpf) {\n              $users[i] = $user;\n              this.setState({infos: $users})\n              localStorage.setItem('myDearTest17112019', JSON.stringify(this.state.infos))\n            }\n          }\n\n        }\n        teste.push(\n          <tr className={`lista_item ${el.statusCadastro}`} key={i}>\n            <td className=\"codigo\">{el.codigo}</td>\n            <td className=\"valor\">{this.currency(el.valor)}</td>\n            <td className=\"data\">{el.data}</td>\n            <td className=\"cbPercent\">{el.cbPercent}</td>\n            <td className=\"cbValor\">{this.currency(el.cbValor)}</td>\n            <td className=\"statusCadastro\">{\n              el.statusCadastro === 'aprovado' ? ('Aprovado') : el.statusCadastro === 'reprovado' ? ('Reprovado') : (\n                <select name=\"select\" onChange={escolha}>\n                  <option value=\"\" >Validação</option> \n                  <option value=\"aprovado\" >Aprovado</option>\n                  <option value=\"reprovado\">Reprovado</option>\n                </select>\n            )}</td>\n          </tr>\n        )\n      }\n\n\n\n      return (\n        <table className=\"lista\">\n          <thead>\n            <tr className=\"lista_item lista_item--topo\">\n              <th className=\"codigo\">Código</th>\n              <th className=\"valor\">Valor da Compra</th>\n              <th className=\"data\">Data</th>\n              <th className=\"cbPercent\">% do Cashback</th>\n              <th className=\"cbValor\">Valor do Cashback</th>\n              <th className=\"statusCadastro\">Status</th>\n            </tr>\n          </thead>\n          <tbody>\n            {teste}\n          </tbody>\n        </table>\n      )\n    }\n    else {\n      return (\n        <h3 className=\"info info--negative\">'Não existem compras ainda.'</h3>\n      )\n    }\n\n\n  }\n\n  onChange = (event) => {\n    let valor = event.target.value\n\n    valor = valor.replace('R$ ', '')\n\n    valor = valor.replace(',', '')\n\n    console.log(valor.length)\n\n    const y = valor\n\n\n    y.length === 0 && (valor = '')\n\n\n    y.length > 0 && (valor = `R$ ${((y * 0.01).toFixed(2)).replace('.', ',')}`)\n\n    console.log(valor)\n\n    this.setState({\n      value: valor\n    });\n  }\n\n\n  render() {\n\n    let paginaAtual = this.state.paginaAtual\n\n    return (\n      <div className={`${this.state.paginaAtual} content`}>\n        {\n          paginaAtual === 'inicio' && (\n            <React.Fragment>\n              <h1>Olá, bem vindo ao aplicativo teste</h1>\n              <div className=\"form form_cadastro\">\n                <h3>Cadastre-se</h3>\n                <span className=\"cont cont--cadastro\">\n                  <label htmlFor=\"cadastro-email\">E-mail</label>\n                  <input type=\"email\" id=\"cadastro-email\" pattern=\".+@globex.com\" size=\"30\" required />\n                </span>\n                <span className=\"cont cont--senha\">\n                  <label htmlFor=\"cadastro-senha\">Senha</label>\n                  <input type=\"password\" id=\"pass2\" name=\"password\" minLength=\"4\" required />\n                </span>\n                <span className=\"cont cont--cpf\">\n                  <label htmlFor=\"cadastro-cpf\">CPF</label>\n                  <InputMask {...this.props} mask=\"999.999.999-99\" maskChar=\"_\" id=\"cpf\" />\n                </span>\n                <button className=\"cadastro-entrar\" onClick={this.setNewUser} value={this.state.value}>Cadastrar</button>\n              </div>\n              <div className=\"form form_login\">\n                <h3>Já sou cadastrado</h3>\n                <span className=\"cont cont--login\">\n                  <label htmlFor=\"login-email\">E-mail</label>\n                  <input type=\"email\" id=\"login-email\" pattern=\".+@globex.com\" size=\"30\" required />\n                </span>\n                <span className=\"cont cont--senha\">\n                  <label htmlFor=\"login-senha\">Senha</label>\n                  <input type=\"password\" id=\"pass\" name=\"password\" minLength=\"4\" required />\n                </span>\n                <button className=\"login-entrar\" onClick={this.consultUser} >Entrar</button>\n              </div>\n            </React.Fragment>\n          )\n        }\n        {\n          paginaAtual === 'listagem' && (\n            <React.Fragment>\n              {this.barraNav()}\n              <h1>Listagem de compras</h1>\n              <div className=\"cont_table\">\n                {this.useList()}\n              </div>\n            </React.Fragment>\n          )\n        }\n        {\n          paginaAtual === 'cadastroCompras' && (\n            <React.Fragment>\n              {this.barraNav()}\n              <h1>Cadastro de Compra</h1>\n              <ul className=\"cadastro\">\n                <li className=\"cadastro_item cadastro_item--topo\">\n                  <span className=\"codigo\">\n                    <label>Código</label>\n                    <input type=\"text\" id=\"cadCode\" />\n                  </span>\n                  <span className=\"valor\">\n                    <label>Valor da Compra</label>\n                    <input type=\"text\" id=\"cadValor\" min=\"1\" onChange={this.onChange} value={this.state.value} />\n                    {/* <InputMask {...this.props} mask=\"R$ 9999999\" maskChar=\"\" id=\"cadValor\" /> */}\n                  </span>\n                  <span className=\"data\">\n                    <label>Data</label>\n                    <input type=\"date\" id=\"cadData\" />\n                  </span>\n                </li>\n                <li className=\"cadastro__button_cont\">\n                  <button className=\"button_cont__cadastrar\" id=\"cadastroCompra\" onClick={this.cadastrarCompra}>Cadastrar</button>\n                </li>\n              </ul>\n            </React.Fragment>\n          )\n        }\n        {\n          paginaAtual === 'cshAcumulado' && (\n            <React.Fragment>\n              {this.barraNav()}\n              <h1>Cashback acumulado</h1>\n              {this.cbAcumulado()}\n            </React.Fragment>\n          )\n        }\n      </div>\n\n    );\n  }\n\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}